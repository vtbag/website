---
import "./_solution_styles.css";
---

<!doctype html>
<html lang="en" data-vtbag-x="#window @scrollTop">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/bag3.png" type="image/png" />
    <meta
      property="og:description"
      content="Desperately waiting for nested view transition groups... Clipping these transitions shouldn't be this hard! 🙏"
    />
    <meta property="og:image" content="/hide-and-seek-og.png" />
    <meta property="og:url" content="/tips/hide-and-seek/" />
    <meta property="og:title" content="Hide and Seek" />
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content="@vtbag" />
    <meta name="twitter:card" content="summary_large_image" />
    <script is:inline>
      const cyberItems = [
        "Quantum Neural Interface",
        "Holographic Data Core",
        "Nano-Tech Augments",
        "Plasma Energy Cells",
        "Binary Dream Encoder",
        "Neural Network Nodes",
        "Cyber-Optic Enhancer",
        "Digital Soul Backup",
        "Quantum Encryption Key",
        "Memory Crystal Array",
        "Bio-Digital Converter",
        "Synthetic Nerve Wire",
        "AI Consciousness Shard",
        "Virtual Reality Seed",
        "Tech-Organic Hybrid",
        "Data Stream Amplifier",
        "Cyber-Kinetic Core",
        "Digital Ghost Protocol",
        "Neural Mesh Network",
        "Quantum Phase Shifter",
      ];

      addEventListener("pagereveal", (event) => {
        if (event.viewTransition) {
          if (
            new URL(navigation.activation.from.url, location.href).pathname !==
            "/tips/hide-and-seek/solution/"
          ) {
            event.viewTransition.skipTransition?.();
          }
        }
        const scrollInfo = JSON.parse(
          sessionStorage.getItem("vtbag-hide-seek") ||
            '{"scrollTop":0, "scrollY":0}'
        );
        scrollTo({ top: scrollInfo.scrollY, left: 0, behavior: "instant" });
        const transition = event.viewTransition;

        const list = shuffleArray(cyberItems);
        const items = createList(list);
        const itemList = document.querySelector("ul.cyber-list");
        itemList.innerHTML = items;
        itemList.scrollTop = scrollInfo.scrollTop;

        document
          .querySelector("#other > div:nth-of-type(2)")
          .replaceWith(document.querySelector("#other > div").cloneNode(true));
        const twin = document.querySelector("#other > div:nth-of-type(2) ul");
        twin.id = "";
        twin.scrollTop = scrollInfo.scrollTop;
        const x = twin.querySelectorAll("li");
        x.forEach((i) => {
          i.style.viewTransitionName = i.innerText.replaceAll(" ", "-");
          i.style.viewTransitionClass = "item";
        });
        const ul = document.querySelector("ul").getBoundingClientRect();
        document.head.insertAdjacentHTML(
          "beforeend",
          `<style>::view-transition-new(root) {
          mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="${innerWidth}" height="${innerHeight}"><rect x="0" y="0" width="${innerWidth}" height="${ul.top + 1}" fill="black"/><rect x="0" y="${ul.bottom - 1}" width="${innerWidth}" height="${innerHeight - ul.bottom + 1}" fill="black"/><rect x="0" y="0" width="${ul.left + 1}" height="${innerHeight}" fill="black"/><rect x="${ul.right - 11}" y="0" width="${innerWidth - ul.right}" height="${innerHeight}" fill="black"/></svg>');
          }</style>`
        );
      });
      function shuffleArray(array) {
        const newArray = [...array];
        for (let i = newArray.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
        }
        return newArray;
      }
      function createList(items, vt) {
        return items.map((item) => `<li>${item}</li>`).join("");
      }
    </script>
    {
      (
        // @ts-ignore
        <link rel="expect" href="#body" blocking="render" />
      )
    }
  </head>
  <body id="body">
    <div id="other">
      <div id="d1">
        <h1>CYBER<span class="glitch-effect">TECH</span> INVENTORY</h1>
        <ul class="cyber-list"></ul>
        <button class="-glitch-effect">RANDOMIZE</button>
        <p style="max-width:640px">
          Ok, it kind of seems to work! This is demo is a rather crude force
          attack to to problem. Keep in mind that view transitions were
          introduced to make things simple. This wasn't. Give us nested groups,
          please! ;-)<br />[<a href="/tips/hide-and-seek/#playing-hide--seek"
            >Back to the Hide and Seek page</a
          >]
        </p>
      </div>
      <div id="d2"></div>
    </div>
    <script>
      document.querySelector("button")!.addEventListener("click", () => {
        const ul = document.querySelector("#other > div ul")!;
        sessionStorage.setItem(
          "vtbag-hide-seek",
          JSON.stringify({ scrollTop: ul.scrollTop, scrollY })
        );
        location.href = "/tips/hide-and-seek/solution/";
      });
      addEventListener("pageswap", (event) => {
        // @ts-ignore
        if (event.viewTransition) {
          // @ts-ignore
          const url = new URL(event.activation.entry.url, location.href);
          console.log(url.pathname);
          if (url.pathname !== "/tips/hide-and-seek/solution/") {
            // @ts-ignore
            event.viewTransition.skipTransition?.();
          }
        }
      });
    </script>
  </body>
</html>
