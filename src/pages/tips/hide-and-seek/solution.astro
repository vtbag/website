---
import "./_solution_styles.css";
import Bsky from "../../../components/Bsky.astro";
---

<!doctype html>
<html lang="en" data-vtbag-x="#window @scrollTop">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/bag3.png" type="image/png" />
    <title>Scrolled List Demo | @vtbag</title>
    <meta
      property="og:description"
      content="Without nested groups, view transition images break out of their captivity as soon as the opportunity arises."
    />
    <meta property="og:image" content="/hide-and-seek-og.png" />
    <meta property="og:url" content="/tips/hide-and-seek/" />
    <meta property="og:title" content="Hide and Seek" />
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content="@vtbag" />
    <meta name="twitter:card" content="summary_large_image" />

    <script is:inline>
      const cyberItems = [
        "Quantum Neural Interface",
        "Holographic Data Core",
        "Nano-Tech Augments",
        "Plasma Energy Cells",
        "Binary Dream Encoder",
        "Neural Network Nodes",
        "Cyber-Optic Enhancer",
        "Digital Soul Backup",
        "Quantum Encryption Key",
        "Memory Crystal Array",
        "Bio-Digital Converter",
        "Synthetic Nerve Wire",
        "AI Consciousness Shard",
        "Virtual Reality Seed",
        "Tech-Organic Hybrid",
        "Data Stream Amplifier",
        "Cyber-Kinetic Core",
        "Digital Ghost Protocol",
        "Neural Mesh Network",
        "Quantum Phase Shifter",
      ];

      // Fallback for browsers that don't support view transitions
      addEventListener("DOMContentLoaded", () => {
        if ("onpagereveal" in window) return;
        const itemList = document.querySelector("ul");
        itemList.innerHTML = createList(shuffleArray(cyberItems));
        restoreScrollPositions(itemList);
        setListener();
      });

      function restoreScrollPositions(itemList) {
        const scrollInfo = JSON.parse(
          sessionStorage.getItem("vtbag-hide-seek") ||
            '{"scrollTop":0, "scrollY":0}'
        );
        scrollTo({ top: scrollInfo.scrollY, left: 0, behavior: "instant" });
        itemList.scrollTop = scrollInfo.scrollTop;
      }

      addEventListener("pagereveal", (event) => {
        const itemList = document.querySelector("ul");
        itemList.innerHTML = createList(shuffleArray(cyberItems));
        addViewTransitionNames();
        restoreScrollPositions(itemList);
        setListener();

        if (false && event.viewTransition) {
          fix(document.querySelector("#d1"), document.querySelector("ul"));
          document
            .querySelectorAll("#vtbag-hide-and-seek-front li")
            .forEach((i) => i.remove());
          event.viewTransition.finished.finally(() =>
            document.querySelector("#vtbag-hide-and-seek-front")?.remove()
          );
        }
      });

      function addViewTransitionNames() {
        document.querySelectorAll("li").forEach((i) => {
          i.style.viewTransitionName = i.innerText.replaceAll(" ", "-");
        });
      }
      function setListener() {
        document.querySelector("button").addEventListener("click", () => {
          const ul = document.querySelector("ul");
          sessionStorage.setItem(
            "vtbag-hide-seek",
            JSON.stringify({ scrollTop: ul.scrollTop, scrollY })
          );
          location.href = "/tips/hide-and-seek/solution/";
        });
      }
      function shuffleArray(array) {
        const newArray = [...array];
        for (let i = newArray.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
        }
        return newArray;
      }

      function createList(items) {
        return items.map((item) => `<li>${item}</li>`).join("");
      }
    </script>
    {
      (
        // @ts-ignore
        <link rel="expect" href="#body" blocking="render" />
      )
    }
  </head>
  <body id="body"
    ><div id="container">
      <div id="back">
        <h1>.</h1>
        <ul></ul>
      </div>
      <div id="front">
        <h1><span class="glitch-effect">INVENTORY</span></h1>
        <ul></ul>
        <button class="glitch-effect">RANDOMIZE</button>
        <p style="max-width:640px">
          Ok, not it works nicely! This is demo is rather elaborated solution.
          Keep in mind that view transitions were introduced to make things
          simple. This wasn't. Give us nested transition groups, please! ;-)<br
          />[<a href="/basics/hide-and-seek/#playing-hide--seek"
            >Back to the Hide and Seek page</a
          >] <Bsky />
        </p>
      </div>
    </div>
  </body>
</html>
