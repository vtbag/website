---
import "./_problem_styles.css";
import Bsky from "../../../components/Bsky.astro";
---

<!doctype html>
<html lang="en" data-vtbag-x="#window @scrollTop">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/bag3.png" type="image/png" />
    <title>Scrolled List Demo | @vtbag</title>
    <meta
      property="og:description"
      content="Without nested groups, view transition images break out of their captivity as soon as the opportunity arises."
    />
    <meta property="og:image" content="/hide-and-seek-og.png" />
    <meta property="og:url" content="/tips/hide-and-seek/" />
    <meta property="og:title" content="Hide and Seek" />
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content="@vtbag" />
    <meta name="twitter:card" content="summary_large_image" />

    <script is:inline>
      const cyberItems = [
        "Quantum Neural Interface",
        "Holographic Data Core",
        "Nano-Tech Augments",
        "Plasma Energy Cells",
        "Binary Dream Encoder",
        "Neural Network Nodes",
        "Cyber-Optic Enhancer",
        "Digital Soul Backup",
        "Quantum Encryption Key",
        "Memory Crystal Array",
        "Bio-Digital Converter",
        "Synthetic Nerve Wire",
        "AI Consciousness Shard",
        "Virtual Reality Seed",
        "Tech-Organic Hybrid",
        "Data Stream Amplifier",
        "Cyber-Kinetic Core",
        "Digital Ghost Protocol",
        "Neural Mesh Network",
        "Quantum Phase Shifter",
      ];

      addEventListener("DOMContentLoaded", () => {
        if ("onpagereveal" in window) return;
        const itemList = document.querySelector("ul.cyber-list");
        itemList.innerHTML = createList(shuffleArray(cyberItems));
        restorescrollPositions(itemList);
      });

      function restorescrollPositions(itemList) {
        const scrollInfo = JSON.parse(
          sessionStorage.getItem("vtbag-hide-seek") ||
            '{"scrollTop":0, "scrollY":0}'
        );
        scrollTo({ top: scrollInfo.scrollY, left: 0, behavior: "instant" });
        itemList.scrollTop = scrollInfo.scrollTop;
      }

      addEventListener("pagereveal", (event) => {
        if (event.viewTransition) {
          if (
            new URL(navigation.activation.from.url, location.href).pathname !==
            "/tips/hide-and-seek/problem/"
          ) {
            event.viewTransition.skipTransition?.();
          }
        }
        const itemList = document.querySelector("ul.cyber-list");
        itemList.innerHTML = createList(shuffleArray(cyberItems));
        restorescrollPositions(itemList);
        itemList.querySelectorAll("li").forEach((i) => {
          i.style.viewTransitionName = i.innerText.replaceAll(" ", "-");
        });
      });

      function shuffleArray(array) {
        const newArray = [...array];
        for (let i = newArray.length - 1; i > 0; i--) {
          const j = Math.floor(Math.random() * (i + 1));
          [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
        }
        return newArray;
      }

      function createList(items, vt) {
        return items.map((item) => `<li>${item}</li>`).join("");
      }
    </script>
    {
      (
        // @ts-ignore
        <link rel="expect" href="#body" blocking="render" />
      )
    }
  </head>
  <body id="body">
    <div id="other">
      <div id="d1">
        <h1>CYBER<span class="glitch-effect">TECH</span> INVENTORY</h1>
        <ul class="cyber-list"></ul>
        <button class="-glitch-effect">RANDOMIZE</button>
        <p style="max-width:640px">
          Oh what a mess! All items of the list define a transition group to
          show how the items are shuffled. But with the start of the view
          transition, they are all thrown on the screen, even if they were
          transition, they are all thrown on the screen, even if they were
          clipped before. Can we <a href="/tips/hide-and-seek/solution/"
            >do better</a
          >?<br />
          [<a href="/basics/hide-and-seek/#demo"
            >Back to the Hide and Seek page</a
          >] <Bsky />
        </p>
      </div>
    </div>
    <script>
      document.querySelector("button")!.addEventListener("click", () => {
        const ul = document.querySelector("#other > div ul")!;
        sessionStorage.setItem(
          "vtbag-hide-seek",
          JSON.stringify({ scrollTop: ul.scrollTop, scrollY })
        );
        location.href = "/tips/hide-and-seek/problem/";
      });
      addEventListener("pageswap", (event) => {
        // @ts-ignore
        if (event.viewTransition) {
          // @ts-ignore
          const url = new URL(event.activation.entry.url, location.href);
          if (url.pathname !== "/tips/hide-and-seek/problem/") {
            // @ts-ignore
            event.viewTransition.skipTransition?.();
          }
        }
      });
    </script>
  </body>
</html>
