---
import Demo from "@/layouts/DemoLayout.astro";
---

<Demo
  title="View Transition Example: Inline to Block Text Morph"
  backlink="/basics/examples/#fail1"
  prev="/demo/FailIM/"
  next="/demo/Fail2/"
  description="A typical fail: Text expands during morph animation."
  image="/bag-og.png"
>
  <div style="height: 16rem">
    <div id="DOM1" class="active">
      <p>
        View transition names can link elements with different attributes and
        even different tag names. You can morph a link element into a heading.
        Just assigning the same view transition name to the link and the heading
        might have <a>a strange effect</a>. Click to start the transition.
      </p>
    </div>
    <div id="DOM2">
      <p style="height: 4rem"></p>
      <div>
        <h2>a strange effect</h2>
        <p>
          Morphing the link into the heading did not look as expected? See the
          explaination below!
        </p>
        <p><a>Click here</a> to morph back</p>
      </div>
    </div>
  </div>
  <style is:global>
    #DOM1,
    #DOM2 {
      display: none;
      cursor: pointer;
    }
    #DOM1.active,
    #DOM2.active {
      display: block;
    }
  </style>
  <style is:inline slot="late-head">
    ::view-transition-group(title) {
      animation-duration: 1s;
    }
    #DOM1 a,
    #DOM2 h2 {
      view-transition-name: title;
    }
    #DOM1 a,
    #DOM2 h2,
    #DOM2 a {
      color: #888;
      text-decoration: wavy underline;
    }
    #DOM1,
    #DOM2 div {
      border: 2px solid gray;
      border-radius: 6px;
    }
    #DOM1 p,
    #DOM2 div {
      padding: 1rem;
    }
  </style>
  <script>
    document.querySelectorAll("#DOM1, #DOM2").forEach((elem) =>
      elem.addEventListener("click", () => {
        mayViewTransition(() => {
          elem.classList.remove("active");
          elem
            .parentElement!.querySelector(
              elem.id === "DOM1" ? "#DOM2" : "#DOM1"
            )
            ?.classList.add("active");
        });
      })
    );
    function mayViewTransition(fun: () => void) {
      // @ts-ignore
      document.startViewTransition ? document.startViewTransition(fun) : fun();
    }
  </script>
</Demo>
